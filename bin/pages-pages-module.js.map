{"version":3,"sources":["./src/app/pages/observados/observados.component.ts","./src/app/pages/observados/observados.component.html","./src/app/login/register.component.ts","./src/app/login/register.component.html","./src/app/pages/registro/enlistar-registro/enlistar-registro.component.ts","./src/app/pages/registro/enlistar-registro/enlistar-registro.component.html","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/usuarios/enlistar-usuario/enlistar-usuario.component.ts","./src/app/usuarios/enlistar-usuario/enlistar-usuario.component.html","./src/app/pages/pages.routes.ts","./src/app/pages/registro/registro.component.ts","./src/app/pages/registro/registro.component.html","./src/app/pages/pages.module.ts"],"names":[],"mappings":"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","file":"pages-pages-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ObservadosService } from 'src/app/services/service.index';\n\n@Component({\n  selector: 'app-observados',\n  templateUrl: './observados.component.html',\n  styleUrls: ['./observados.component.css']\n})\nexport class ObservadosComponent implements OnInit {\n\n  datosObservados:any=[];\n\n  constructor(\n    public _MostrarObservados:ObservadosService\n    \n  ) { }\n\n  ngOnInit(): void {\n    this.cargarDatos();\n  }\n\n  cargarDatos(){\n    this._MostrarObservados.mostrarObservados()\n      .subscribe(\n        res=>{\n          this.datosObservados=res;\n        }\n      );\n  }\n\n  \n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Buscar usuarios\">\n            </div>\n        </div>\n    </div>\n</div>\n<!-- <div class=\"row\">\n    <div class=\"col-sm-12\">\n        <div class=\"alert alert-warning text-center\">\n        <strong>Cargando</strong>\n        <br>\n        <i class=\"fa fa-refresh  fa-spin fa-2x\"></i>\n        <br>\n        <span>Espere por favor</span> \n    </div>\n    </div>\n</div> -->\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h3>Tramites Observados</h3>\n                    <table class=\"table table-hover\">\n                        <thead>\n                            <tr>\n                                <th>Nombre Tramite</th>\n                                <th>Nombre Usuario</th>\n                                <th>Apellido Usuario</th>\n                                <th>Nombre Archivo</th>\n                                <th>Area de Destino</th>\n                                \n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let datos of datosObservados\">\n                                <td>{{datos.nombreTramite}}</td>\n                                <td>{{datos.nombreUsuario}}</td>\n                                <td>{{datos.apellidoUsuario}}</td>\n                                <td>{{datos.archivoTramite}}</td>\n                                <td>{{datos.areaDestino}}</td>\n                            </tr> \n                        </tbody>\n                    </table>\n                    <button class=\"btn btn-secundary\">\n                        Anterior\n                    </button>\n                    <button class=\"btn btn-secundary\">\n                        Siguiente\n                    </button>\n            </div>\n        </div>\n    </div>","\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Usuario } from '../model/usuario/usuario.model';\nimport { UsuarioService } from '../services/service.index';\nimport Swal from 'sweetalert2' ;\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  forma:FormGroup;\n\n  constructor(\n    public _usuarioService: UsuarioService,\n    public router:Router\n\n  ) { }\n\n  ngOnInit(): void {\n\n\n    this.forma=new FormGroup({\n\n      nombreUsuario: new FormControl(null, Validators.required),\n      apellidoUsuario: new FormControl(null, Validators.required),\n      telefonoUsuario: new FormControl(null, Validators.required),\n      areaUsuario: new FormControl(null, Validators.required),\n      rolUsuario: new FormControl(null, Validators.required),\n      nombre: new FormControl(null, Validators.required),\n      email: new FormControl(null, [Validators.required,Validators.email]),\n      password: new FormControl(null, Validators.required),\n      password2: new FormControl(null, Validators.required),\n      condiciones: new FormControl(true),\n    });\n  }\n\n  registrarUsuario(){\n\n   \n\n    let usuario = new Usuario(\n      this.forma.value.nombreUsuario,\n      this.forma.value.apellidoUsuario,\n      this.forma.value.telefonoUsuario,\n      this.forma.value.areaUsuario,\n      this.forma.value.rolUsuarios,\n      this.forma.value.nombre,\n      this.forma.value.email,\n      this.forma.value.password\n    );\n\n    this._usuarioService.crearUsuario(usuario)\n        .subscribe(res => {\n          console.log(res);\n          Swal.fire('Creado Exitosamente');\n          this.router.navigate(['/usuariolistado']);\n        }); \n\n        \n                           \n  }\n\n  City: any = ['area1', 'administracion', 'area2']\n  City2: any = ['Administrador', 'Trabajador']\n\n\n}\n"," <!-- Main wrapper - style you can find in pages.scss -->\n    <!-- ============================================================== -->\n<div class=\"container\">\n    <form [formGroup]=\"forma\" (ngSubmit)=\"registrarUsuario()\"  id=\"loginform\" action=\"index.html\">\n        <h3 class=\"box-title m-b-20\" >REGISTRAR DATOS USUARIO</h3>\n        <div class=\"form-group\">\n            <div class=\"col-xs-12\">\n                <label>Nombres</label>\n                <input formControlName=\"nombreUsuario\" name=\"nombreUsuario\" class=\"form-control\" type=\"text\" required=\"\" >\n                <span *ngIf=\"this.forma.get('nombreUsuario').errors?.required\">\n                    (El nombre de Usuario no puede quedar vacío)\n                  </span>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <div class=\"col-xs-12\">\n                <label>Apellidos</label>\n                <input formControlName=\"apellidoUsuario\" name=\"apellidoUsuario\" class=\"form-control\" type=\"text\" required=\"\" >\n                <span *ngIf=\"this.forma.get('apellidoUsuario').errors?.required\">\n                    (El apellido Usuario no puede quedar vacio)\n                </span>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <div class=\"col-xs-12\">\n                <label>Telefono</label>\n                <input formControlName=\"telefonoUsuario\" name=\"telefonoUsuario\" class=\"form-control\" type=\"text\" required=\"\" >\n                <span *ngIf=\"this.forma.get('telefonoUsuario').errors?.required\">\n                    (El N° telefono no puede quedar vacio)\n                </span>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <div class=\"col-xs-12\">\n                <label>Area</label>\n                <select class=\"form-control\" formControlName=\"areaUsuario\">\n                    <option *ngFor=\"let city of City\" [ngValue]=\"city\">{{city}}</option>\n                    </select>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <div class=\"col-xs-12\">\n                <label>Rol</label>\n                <select class=\"form-control\" formControlName=\"rolUsuario\">\n                    <option *ngFor=\"let city of City2\" [ngValue]=\"city\">{{city}}</option>\n                    </select>\n            </div>\n        </div>\n\n        <div class=\"\" style=\"border: 1px solid black; padding: 10px;\">\n            <div>\n                <h2 style=\"color: brown\">DATOS ACCESO AL SISTEMA</h2>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"col-xs-12\">\n                    <label>Nombre de Usuario</label>\n                    <input formControlName=\"nombre\" name=\"nombre\" class=\"form-control\" type=\"text\" required=\"\" >\n                    <span *ngIf=\"this.forma.get('nombre').errors?.required\">\n                        (El nombre de  Usuario no puede quedar vacio)\n                    </span>\n                </div>\n            </div>\n            <div class=\"form-group \">\n                <div class=\"col-xs-12\">\n                    <label>Email</label>\n                    <input formControlName=\"email\" name=\"email\" class=\"form-control\" type=\"text\" required=\"\" >\n                    <span *ngIf=\"this.forma.get('email').errors?.required\">\n                        (El email no puede quedar vacio)\n                    </span>\n                </div>\n            </div>\n            <div class=\"form-group \">\n                <div class=\"col-xs-12\">\n                    <label>Contraseña</label>\n                    <input formControlName=\"password\" name=\"password\" class=\"form-control\" type=\"password\" required=\"\" >\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"col-xs-12\">\n                    <label>Confirmar Contraseña</label>\n                    <input formControlName=\"password\" name=\"password\" class=\"form-control\" type=\"password\" required=\"\" >\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"form-group text-center p-b-20 mt-4\">\n            <div class=\"col-xs-6\">\n                <button class=\"btn btn-info btn-lg btn-block btn-rounded text-uppercase waves-effect waves-light\" type=\"submit\">Guardar Datos</button>\n            </div>\n        </div>\n    </form>\n</div>     \n      \n    <!-- ============================================================== -->\n    <!-- End Wrapper -->\n","import { Component, OnInit } from '@angular/core';\n\nimport{TramitesService} from '../../../services/tramites.service';\n\n@Component({\n  selector: 'app-enlistar-registro',\n  templateUrl: './enlistar-registro.component.html',\n  styleUrls: ['./enlistar-registro.component.css']\n})\nexport class EnlistarRegistroComponent implements OnInit {\n\n  tramites:any=[];\n\n  constructor(\n    public _tramteService:TramitesService\n  ) { }\n\n  ngOnInit(): void {\n    this.enlistarUsuario();\n  }\n\n  enlistarUsuario(){\n    this._tramteService.enlistaTramite()\n          .subscribe(\n              res=>{\n                this.tramites=res;\n              }\n          );\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Busar usuarios\">\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h3>usuarios Registrados</h3>\n                    <table class=\"table table-hover\">\n                        <thead>\n                            <tr>\n                                <th>Usuario</th>\n                                <th>Email</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let tramite of tramites\">\n                                <td>{{tramite.nombretramite}}</td>\n                                <td>{{tramite.nombreUsuario}}</td>\n                                <td>\n                                    <button class=\"btn btn-primary\">\n                                    <i class=\"fa fa-save\">Editar</i>\n                                    </button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <button class=\"btn btn-secundary\">\n                        Anterior\n                    </button>\n                    <button class=\"btn btn-secundary\">\n                        Siguiente\n                    </button>\n            </div>\n        </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styles: [\n  ]\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p style=\"font-size: 50px\" >BIENVENIDOS</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Usuario } from 'src/app/model/usuario/usuario.model';\nimport { UsuarioService } from 'src/app/services/service.index';\n\n\n@Component({\n  selector: 'app-enlistar-usuario',\n  templateUrl: './enlistar-usuario.component.html',\n  styles: [\n  ]\n})\nexport class EnlistarUsuarioComponent implements OnInit {\n\n  usuarios:any=[];\n\n  constructor(\n    public _usuarioService: UsuarioService\n\n  ) { }\n\n  ngOnInit(): void {\n    this.cargarUsurarios2();\n  }\n\n  cargarUsurarios2(){\n    this._usuarioService.cargarUsuarios()\n                        .subscribe(\n                          res=>{\n                            this.usuarios=res;\n                          }\n                          \n                        );\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Busar usuarios\">\n            </div>\n        </div>\n    </div>\n</div>>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h3>usuarios Registrados</h3>\n                    <table class=\"table table-hover\">\n                        <thead>\n                            <tr>\n                                <th>Usuario</th>\n                                <th>Email</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let usuario of usuarios\">\n                                <td>{{usuario.nombre}}</td>\n                                <td>{{usuario.email}}</td>\n                                <td>\n                                    <button class=\"btn btn-danger\">\n                                    <i class=\"fa fa-trash-o\">Eliminar</i>\n                                    </button>\n\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <button class=\"btn btn-secundary\">\n                        Anterior\n                    </button>\n                    <button class=\"btn btn-secundary\">\n                        Siguiente\n                    </button>\n            </div>\n        </div>\n    </div>","\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nimport { RegisterComponent } from '../login/register.component';\r\nimport { AdminGuard, LoginGuardGuard } from '../services/service.index';\r\nimport { EnlistarUsuarioComponent } from '../usuarios/enlistar-usuario/enlistar-usuario.component';\r\nimport { Area1Component } from './areas/area1/area1.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { ObservadosComponent } from './observados/observados.component';\r\n\r\nimport {PagesComponent} from './pages.component';\r\nimport { EnlistarRegistroComponent } from './registro/enlistar-registro/enlistar-registro.component';\r\nimport { RegistroComponent } from './registro/registro.component';\r\n\r\n\r\n\r\n\r\nconst pagesRoutes:Routes=[\r\n\r\n    {path:'dashboard',component: DashboardComponent},\r\n    \r\n    {path:'tramite',component:RegistroComponent},\r\n    {path:'tramitelistado',component:EnlistarRegistroComponent},\r\n    {path:'usuariolistado',component:EnlistarUsuarioComponent},\r\n    {path:'usuario',component:RegisterComponent},\r\n    {path:'observados',component:ObservadosComponent},\r\n        \r\n    \r\n];\r\n\r\nexport const PAGES_ROUTES=RouterModule.forChild(pagesRoutes);","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Tramite } from 'src/app/model/tramite/tramite.model';\nimport { Usuario } from 'src/app/model/usuario/usuario.model';\nimport { TramitesService } from 'src/app/services/tramites.service';\nimport Swal from 'sweetalert2' ;\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styles: [\n  ]\n})\nexport class RegistroComponent implements OnInit {\n  forma:FormGroup;\n  archivoTramite:File;\n\n  constructor(\n  \n    public router:Router,\n    public _tramiteService:TramitesService\n\n  ) { }\n\n  /* seleccionImage(archivo:File){\n   this.archivoTramite=archivo;\n   console.log(this.archivoTramite)\n    //(<HTMLInputElement>fileInput.target).files[0];\n  } */\n\n  seleccionImage(archivo:File){\n    \n    console.log(archivo);\n    this.archivoTramite=archivo;\n     //(<HTMLInputElement>fileInput.target).files[0];\n\n   }\n\n  ngOnInit(): void {\n\n    \n    this.forma=new FormGroup({\n      \n      nombreTramite: new FormControl(null, Validators.required),\n      \n      nombreUsuario: new FormControl(null, Validators.required),\n      apellidoUsuario: new FormControl(null, Validators.required),\n      fechaTramite: new FormControl(null, Validators.required),\n      archivoTramite: new FormControl(null, Validators.required),\n      areaDestino: new FormControl(null, Validators.required),\n    });\n  }\n\n \n\n  registrarTramite(){\n\n      let tramite = new Tramite(\n        0,\n      this.forma.value.nombreTramite,\n      \n      this.forma.value.nombreUsuario,\n      \n      this.forma.value.apellidoUsuario,\n      \n      this.forma.value.fechaTramite,\n      \n      this.forma.value.archivoTramite,\n      \n      this.forma.value.areaDestino,\n      \n      0,\n      \n    );\n   \n\n    this._tramiteService.guardarTramites(tramite, this.archivoTramite)\n        .then(resp=>{\n          console.log(resp);\n          Swal.fire('Registrado Exitosamente');\n          this.router.navigate(['/dashboard']);\n        })\n        .catch(resp=>{\n          console.log(resp);\n        })                  \n  }\n\n  City: any = ['area0', 'area1', 'area0']\n  \n}\n","<div class=\"container\">\n  <form  [formGroup]=\"forma\" (ngSubmit)=\"registrarTramite()\" encType=\"multipart/form-data\" >\n      <div>\n        <h2 style=\"color: brown\">\n          REGISTRAR NUEVO TRAMITE\n        </h2>\n      </div>  \n      <div class=\"form-group\">\n          <label>Nombre de Tramite</label>\n          <input formControlName=\"nombreTramite\" name=\"nombreTramite\" type=\"text\" class=\"form-control\" ngModel required>\n            <span *ngIf=\"this.forma.get('nombreTramite').errors?.required\">\n              (El nombre de Tramite no puede quedar vacío)\n            </span>\n        </div>\n\n        <div class=\"form-group\">\n          <label>Nombre Usuario</label>\n          <input formControlName=\"nombreUsuario\" name=\"nombreUsuario\"  type=\"text\" class=\"form-control\" ngModel required>\n            <span *ngIf=\"this.forma.get('nombreUsuario').errors?.required\">\n              (El nombre de usuario no puede quedar vacío)\n            </span>\n        </div>\n\n        <div>\n          <label>Apellido Usuario</label>\n          <input formControlName=\"apellidoUsuario\" name=\"apellidoUsuario\" type=\"text\" class=\"form-control\">\n            <span *ngIf=\"this.forma.get('apellidoUsuario').errors?.required\">\n              (El apellido no puede quedar vacío)\n            </span>\n        </div>\n        \n        <div class=\"form-group\">\n          <label>Fecha Tramite</label>\n          <input formControlName=\"fechaTramite\" name=\"fechaTramite\" type=\"date\" class=\"form-control\">\n        </div>\n\n        <div class=\"form-group\">\n          <label>Archivo</label>\n          <input (change)=\"seleccionImage($event.target.files[0])\" name=\"archivo\" type=\"file\" class=\"form-control\">\n        </div>\n        <!--  formControlName=\"archivoTramite\" name=\"archivoTramite\"  -->\n\n        <div class=\"form-group\">\n          <label>Area de Destino</label>\n          <select class=\"form-control\" formControlName=\"areaDestino\">\n              \n              <option *ngFor=\"let city of City\" [ngValue]=\"city\">{{city}}</option>\n          </select>\n        </div>\n        <button  type=\"submit\" class=\"btn btn-primary \">Guardar Datos</button>\n\n  </form>\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PAGES_ROUTES } from './pages.routes';\r\nimport { ObservadosComponent } from './observados/observados.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { RegistroComponent } from './registro/registro.component';\r\nimport { EnlistarRegistroComponent } from './registro/enlistar-registro/enlistar-registro.component';\r\nimport { RegisterComponent } from '../login/register.component';\r\nimport { EnlistarUsuarioComponent } from '../usuarios/enlistar-usuario/enlistar-usuario.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ObservadosComponent,\r\n    DashboardComponent,\r\n    ObservadosComponent,\r\n    RegistroComponent,\r\n    EnlistarRegistroComponent,\r\n    RegisterComponent,\r\n    EnlistarUsuarioComponent\r\n  \r\n  \r\n  ],\r\n\r\n  exports:[\r\n    DashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    PAGES_ROUTES\r\n  ]\r\n})\r\nexport class PagesModule { }"],"sourceRoot":"webpack:///"}